<?xml version="1.0"?>
<doc>
    <assembly>
        <name>webapi.event+</name>
    </assembly>
    <members>
        <member name="M:webapi.event_.Controllers.ComentarioEventoController.GetAll">
            <summary>
            Rota para listar todos os comentários cadastrados
            </summary>
            <returns></returns>
        </member>
        <member name="M:webapi.event_.Controllers.ComentarioEventoController.GetById(System.Guid)">
            <summary>
            Rota para buscar determinado comentário pelo seu id
            </summary>
            <param name="id">Id do comentário a ser buscado</param>
            <returns></returns>
        </member>
        <member name="M:webapi.event_.Controllers.ComentarioEventoController.Post(webapi.event_.Domains.ComentarioEvento)">
            <summary>
            Rota para cadastrar um novo comentário
            </summary>
            <param name="novoComentario">Informações do comentário a ser cadastrado</param>
            <returns></returns>
        </member>
        <member name="M:webapi.event_.Controllers.ComentarioEventoController.Delete(System.Guid)">
            <summary>
            Rota para deletar determinado comentário pelo seu id
            </summary>
            <param name="id">Id do comentário a ser deletado</param>
            <returns></returns>
        </member>
        <member name="M:webapi.event_.Controllers.EventoController.GetAll">
            <summary>
            Rota para listar todos os eventos cadastrados
            </summary>
            <returns></returns>
        </member>
        <member name="M:webapi.event_.Controllers.EventoController.GetById(System.Guid)">
            <summary>
            Rota para Buscar determinado evento pelo seu id
            </summary>
            <param name="id">Id do evento a ser buscado</param>
            <returns></returns>
        </member>
        <member name="M:webapi.event_.Controllers.EventoController.Post(webapi.event_.Domains.Evento)">
            <summary>
            Rota para cadastrar um novo evento
            </summary>
            <param name="novoEvento">Informações do evento a ser cadastrado</param>
            <returns></returns>
        </member>
        <member name="M:webapi.event_.Controllers.EventoController.Delete(System.Guid)">
            <summary>
            Rota para deletar determinado evento pelo seu id
            </summary>
            <param name="id">Id do evento a ser deletado</param>
            <returns></returns>
        </member>
        <member name="M:webapi.event_.Controllers.EventoController.Put(System.Guid,webapi.event_.Domains.Evento)">
            <summary>
            Rota para atualizar determinado evento pelo seu id
            </summary>
            <param name="id">Id do evento a ser atualizado</param>
            <param name="eventoAtualizado">Novas informações do evento em questão</param>
            <returns></returns>
        </member>
        <member name="M:webapi.event_.Controllers.InstituicaoController.GetAll">
            <summary>
            Rota para listar todas as instituições cadastradas
            </summary>
            <returns></returns>
        </member>
        <member name="M:webapi.event_.Controllers.InstituicaoController.GetById(System.Guid)">
            <summary>
            Rota para buscar determinada estituição pelo seu id
            </summary>
            <param name="id">Id do estúdio a ser buscado</param>
            <returns></returns>
        </member>
        <member name="M:webapi.event_.Controllers.InstituicaoController.Post(webapi.event_.Domains.Instituicao)">
            <summary>
            Rota para cadastrar uma nova instituição
            </summary>
            <param name="instituicao">Informações da instituição que será cadastrada</param>
            <returns></returns>
        </member>
        <member name="M:webapi.event_.Controllers.InstituicaoController.Delete(System.Guid)">
            <summary>
            Rota para deletar determinada instituição pelo seu id
            </summary>
            <param name="id">Id da instituição a ser deletada</param>
            <returns></returns>
        </member>
        <member name="M:webapi.event_.Controllers.InstituicaoController.Put(System.Guid,webapi.event_.Domains.Instituicao)">
            <summary>
            Rota para atualizar determinada instituição
            </summary>
            <param name="id">Id da instituição a ser atualizada</param>
            <param name="instituicao">Novas informações da instituição</param>
            <returns></returns>
        </member>
        <member name="M:webapi.event_.Controllers.LoginController.Login(webapi.event_.ViewModels.LoginViewModel)">
            <summary>
            Rota para logar determinado usuário e obter suas definições de autenticação e autorização
            </summary>
            <param name="informacoesLogin">Informações de Email e Senha para a verificação de Login</param>
            <returns></returns>
        </member>
        <member name="M:webapi.event_.Controllers.PresencaEventoController.GetAll">
            <summary>
            Rota para listar todas as inscrições em eventos cadastradas
            </summary>
            <returns></returns>
        </member>
        <member name="M:webapi.event_.Controllers.PresencaEventoController.GetById(System.Guid)">
            <summary>
            Rota buscar determinada inscrição em algum evento pelo seu id
            </summary>
            <param name="id">Id do evento a ser buscado</param>
            <returns></returns>
        </member>
        <member name="M:webapi.event_.Controllers.PresencaEventoController.GetByUser(System.Guid)">
            <summary>
            Rota para listar todas as inscrições associadas a determinado aluno pelo seu id
            </summary>
            <param name="id">Id do aluno associado às inscrições</param>
            <returns></returns>
        </member>
        <member name="M:webapi.event_.Controllers.PresencaEventoController.Post(webapi.event_.Domains.PresencaEvento)">
            <summary>
            Rota para realizar uma inscrição de um aluno em um evento
            </summary>
            <param name="novaPresenca">Informações do aluno, do evento e da situação da inscrição para o cadastro</param>
            <returns></returns>
        </member>
        <member name="M:webapi.event_.Controllers.PresencaEventoController.Delete(System.Guid)">
            <summary>
            Rota para cancelar determinada inscrição de um aluno em um evento pelo id da inscrição
            </summary>
            <param name="id">Id da inscrição a ser cancelada</param>
            <returns></returns>
        </member>
        <member name="M:webapi.event_.Controllers.PresencaEventoController.Put(System.Guid,webapi.event_.Domains.PresencaEvento)">
            <summary>
            Rota para atualizar as iformações de determinada inscrição pelo seu id
            </summary>
            <param name="id">Id da inscrição a ser atualizada</param>
            <param name="presencaAtualizada">Informaações atualizadas da inscrição</param>
            <returns></returns>
        </member>
        <member name="M:webapi.event_.Controllers.TipoEventoController.GetAll">
            <summary>
            Rota para listar todos os tipos de evento cadastrados
            </summary>
            <returns></returns>
        </member>
        <member name="M:webapi.event_.Controllers.TipoEventoController.GetById(System.Guid)">
            <summary>
            Rota para buscar determinado tipo de evento pelo seu id
            </summary>
            <param name="id">Id do tipo de estúdio a ser cadastrado</param>
            <returns></returns>
        </member>
        <member name="M:webapi.event_.Controllers.TipoEventoController.Post(webapi.event_.Domains.TipoEvento)">
            <summary>
            Rota para cadastrar um novo tipo de evento
            </summary>
            <param name="novoTipo">Informações do novo tipo de evento a ser cadastrado</param>
            <returns></returns>
        </member>
        <member name="M:webapi.event_.Controllers.TipoEventoController.Delete(System.Guid)">
            <summary>
            Rota para deletar determinado tipo de evento pelo seu id
            </summary>
            <param name="id">Id do tipo de evento a ser deletado</param>
            <returns></returns>
        </member>
        <member name="M:webapi.event_.Controllers.TipoEventoController.Put(System.Guid,webapi.event_.Domains.TipoEvento)">
            <summary>
            Rota para atualizar determinado tipo de evento pelo seu id
            </summary>
            <param name="id">Id do evento a ser atualizado</param>
            <param name="tipoAtualizado">Novas informações do tipo de evento em questão</param>
            <returns></returns>
        </member>
        <member name="M:webapi.event_.Controllers.TipoUsuarioController.GetAll">
            <summary>
            Rota para listar todos os Tipos de Usuário cadastrados
            </summary>
            <returns></returns>
        </member>
        <member name="M:webapi.event_.Controllers.TipoUsuarioController.GetById(System.Guid)">
            <summary>
            Rota para buscar determinado tipo de usuário cadatrado pelo seu id
            </summary>
            <param name="id">Id do tipo de usuário a ser buscado</param>
            <returns></returns>
        </member>
        <member name="M:webapi.event_.Controllers.TipoUsuarioController.Post(webapi.event_.Domains.TipoUsuario)">
            <summary>
            Rota para cadastrar um novo tipo de usuário
            </summary>
            <param name="tipoUsuario">Objeto contendo as informações do tipo de usuário
            a ser cadastrado</param>
            <returns></returns>
        </member>
        <member name="M:webapi.event_.Controllers.TipoUsuarioController.Delete(System.Guid)">
            <summary>
            Rota para deletar determinado tipo de usuário pelo seu id
            </summary>
            <param name="id">Id do usuário a ser deletado</param>
            <returns></returns>
        </member>
        <member name="M:webapi.event_.Controllers.TipoUsuarioController.Delete(System.Guid,webapi.event_.Domains.TipoUsuario)">
            <summary>
            Rota para atualizar determinado tipo de tipo de usuário pelo seu id
            </summary>
            <param name="id">Id dotipo de usuário a ser deletado</param>
            <param name="tipoUsuarioAtualizado">Objeto contendo as informações atualizadas do objeto a ser atualiado</param>
            <returns></returns>
        </member>
        <member name="M:webapi.event_.Controllers.UsuarioController.Post(webapi.event_.Domains.Usuario)">
            <summary>
            Rota para cadastrar um novo usuário
            </summary>
            <param name="usuario">Objeto contendo as informações do usuário a ser cadastrado</param>
            <returns></returns>
        </member>
        <member name="M:webapi.event_.Controllers.UsuarioController.GetById(System.Guid)">
            <summary>
            Rota para buscar determinado usuário por seu id
            </summary>
            <param name="id">Id do usuário a ser buscado</param>
            <returns></returns>
        </member>
        <member name="M:webapi.event_.Controllers.UsuarioController.Delete(System.Guid)">
            <summary>
            Rota para deletar determinado usuário pelo seu id
            </summary>
            <param name="id">Id do usuário a ser deletado</param>
            <returns></returns>
        </member>
        <member name="M:webapi.event_.Controllers.UsuarioController.Put(System.Guid,webapi.event_.Domains.Usuario)">
            <summary>
            Rota para atualizar determinado usuário pelo seu id
            </summary>
            <param name="id">Id do usuário a ser atualizado</param>
            <param name="usuarioAtualizado">Objeto contendo as novas informações do usuário</param>
            <returns></returns>
        </member>
        <member name="T:webapi.event_.Migrations.EventDB">
            <inheritdoc />
        </member>
        <member name="M:webapi.event_.Migrations.EventDB.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:webapi.event_.Migrations.EventDB.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:webapi.event_.Migrations.EventDB.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
    </members>
</doc>
